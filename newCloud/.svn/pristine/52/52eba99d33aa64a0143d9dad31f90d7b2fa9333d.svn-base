<?xml version="1.0" encoding="UTF-8"?>  
<beans  
	xmlns="http://www.springframework.org/schema/beans"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd"> 

<!-- 测试定时任务类-->
<!--  <bean id="testJob" class="com.test.TestTask" />
  测试定时任务方法
 <bean id="testJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
  <property name="targetObject" ref="testJob" />
  <property name="targetMethod" value="testTimerTask" />定时方法名称
  <property name="concurrent" value="false" />
  是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程
 </bean>
  Trigger的配置(全员代理)
 <bean id="testTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
  <property name="jobDetail" ref="testJobDetail" />
  <property name="cronExpression" value="*/10 * * * * ?" />
 </bean>
 
  -->
 
 <!-- 测试定时任务类-->
 <bean id="getTypeDataJob" class="com.broadeast.service.impl.DataStatisticsImpl" />
  <!-- 测试定时任务方法 -->
 <bean id="getTypeDataJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
  <property name="targetObject" ref="getTypeDataJob" />
  <property name="targetMethod" value="TiminggetTypeData" /><!--定时方法名称-->
  <property name="concurrent" value="false" />
  <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
 </bean>
  <!-- Trigger的配置(全员代理) -->
 <bean id="getTypeDataTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
  <property name="jobDetail" ref="getTypeDataJobDetail" />
  <property name="cronExpression" value="00 55 23 ? * *" />
 </bean>
 
 
 

<!-- 定时任务配置，广告分成+调接口 -->
 <!-- Scheduler包含一个Trigger列表，每个Trigger表示一个作业 -->
 <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
  <!--QuartzScheduler 延时启动，/秒，应用启动后 QuartzScheduler 再启动-->
  <property name="startupDelay" value="5" />
  <!-- 普通触发器：触发器列表，（可以配置多个任务）-->
  <property name="triggers">
   <list>
    <ref bean="getTypeDataTrigger" />
   </list>
  </property>
  <property name="autoStartup" value="true" />
 </bean>

</beans>