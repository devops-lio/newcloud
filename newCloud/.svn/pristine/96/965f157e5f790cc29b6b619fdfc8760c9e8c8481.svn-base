package com.broadeast.controller;

import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import com.broadeast.bean.AjaxPageBean;
import com.broadeast.entity.CloudUser;
import com.broadeast.service.impl.CloudSiteServiceImpl;
import com.broadeast.util.ExecuteResult;

@Controller
@RequestMapping("/CloudSiteManage")
public class CloudSiteController {
	
	@Autowired
	public CloudSiteServiceImpl cloudsiteserviceimpl;
	
	@RequestMapping("index")
	public String toManageIndex(){
		return "/cloudsite/cloudSiteList";
	}

	/**
	 * 添加场所
	 * @param siteName
	 * @param address
	 * @param session
	 * @return
	 */
	@RequestMapping("addCloudSite")
	@ResponseBody
	public String addCloudSite(@RequestParam(defaultValue= "") String siteName,@RequestParam(defaultValue = "") String address,HttpSession session){
		ExecuteResult result=new ExecuteResult();
		int userId=((CloudUser)session.getAttribute("user")).getId();
		//查询该用户下是否有未绑定设备的场所，有的话就不能添加
		int count=cloudsiteserviceimpl.querySiteConfigBySiteIdAndUserID(userId);
		result.setCode(200+count);
		if(result.getCode()==200){//可以添加
			boolean isSuccess=cloudsiteserviceimpl.addCloudSite(siteName,address,userId);
			if(!isSuccess){
				result.setCode(205);
				result.setMsg("添加失败!");
			}else{
				result.setMsg("添加成功，并生成了相应的计费规则!");
			}
		}else{
			result.setMsg("添加失败，您有未绑定设备的场所");
		}
		return result.toJsonString();
	}
	
	/**
	 * 获取用户名下的场所列表
	 * @param curPage
	 * @param pageSize
	 * @param session
	 * @return
	 */
	@RequestMapping("getUserSiteList")
	@ResponseBody
	public String getUserSiteList(@RequestParam(defaultValue = "1") int curPage,@RequestParam(defaultValue = "10") int pageSize,HttpSession session){
		 
		ExecuteResult result=new ExecuteResult();
		result.setCode(200);
		int userId=((CloudUser)session.getAttribute("user")).getId();
		AjaxPageBean ab=cloudsiteserviceimpl.getUserSiteList(userId, curPage, pageSize);
		if(ab==null){
			result.setCode(201);
			result.setMsg("数据获取失败，请稍后再试");
			return result.toJsonString();
		}
		result.setData(ab);  
		return result.toJsonString();
	}
	
	/**
	 * 添加设备
	 * @param mac
	 * @param address
	 * @param session
	 * @return
	 */
	@RequestMapping("addDevice")
	@ResponseBody
	public String addDevice(@RequestParam(defaultValue = "1") String mac,@RequestParam(defaultValue = "1") String siteId,HttpSession session){
		ExecuteResult result=new ExecuteResult();
		mac=mac.replace(":", "");
		//检查该路由器是否可以绑定
		int i=cloudsiteserviceimpl.isDeviceReady(mac);
		result.setCode(200+i);
		
		if(result.getCode()==200){//可以绑定，执行绑定
			boolean a=cloudsiteserviceimpl.bindDeviceToUser(Integer.parseInt(siteId), mac);
			if(!a){
				result.setCode(205);
				result.setMsg("添加失败，请核对输入的MAC地址并确认路由器能正常上网");
			}
		}else{
			result.setMsg("添加失败，请核对输入的MAC地址并确认路由器能正常上网");
		}
		return result.toJsonString();
	}
	
	/**
	 * 获取用户设备详细 
	 * @param siteId
	 * @param curPage
	 * @param pageSize
	 * @param session
	 * @return
	 */
	@RequestMapping("getaDeviceInfo")
	@ResponseBody
	public String GetaDeviceInfo(@RequestParam(defaultValue = "1") int siteId,@RequestParam(defaultValue = "1") int curPage,
			@RequestParam(defaultValue = "1")int pageSize,HttpSession session){
		int userId=((CloudUser)session.getAttribute("user")).getId();
		ExecuteResult result=new ExecuteResult();
		AjaxPageBean ab=cloudsiteserviceimpl.getDevice(siteId, userId, curPage, pageSize);
		result.setData(ab);
		result.setCode(ab.getCode());
		return result.toJsonString();
	}
	
	
	
}
